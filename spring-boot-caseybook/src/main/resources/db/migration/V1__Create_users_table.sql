DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS POSTS;
DROP TABLE IF EXISTS COMMENTS;

create table USERS (
    ID serial PRIMARY KEY,
    USER_NAME varchar(100),
    FIRST_NAME varchar(100),
    LAST_NAME varchar(100),
    EMAIL varchar(100),
    LOCATION varchar(100),
    ABOUT_ME varchar(500),
    TIME_ADDED TIMESTAMP
);

create table FRIENDS (
    ID serial PRIMARY KEY,
    STATUS integer,
    SENT_REQUEST integer,
    RECEIVED_REQUEST integer,
    SENT_REQUEST_USER_NAME varchar(100),
    RECEIVED_REQUEST_USER_NAME varchar(100),
    TIME_ADDED TIMESTAMP,
    CONSTRAINT SENT_REQUEST FOREIGN KEY(SENT_REQUEST)
        REFERENCES USERS (ID)
        ON UPDATE RESTRICT ON DELETE CASCADE,
    CONSTRAINT RECEIVED_REQUEST FOREIGN KEY(RECEIVED_REQUEST)
        REFERENCES USERS (ID)
        ON UPDATE RESTRICT ON DELETE CASCADE
);

create table POSTS (
    ID serial PRIMARY KEY,
    TITLE varchar(50),
    POSTER_ID integer,
    POSTER_USER_NAME varchar(100),
    POST_TEXT varchar(500),
    NUMBER_OF_LIKES integer DEFAULT 0,
    NUMBER_OF_COMMENTS integer DEFAULT 0,
    ABLE_TO_VIEW integer DEFAULT 0,
    TIME_ADDED TIMESTAMP,
    CONSTRAINT POSTER_ID FOREIGN KEY(POSTER_ID)
        REFERENCES USERS (ID)
        ON UPDATE RESTRICT ON DELETE CASCADE
);

create table COMMENTS (
    ID serial PRIMARY KEY,
    COMMENTER_ID integer,
    POST_ID integer,
    COMMENTER_USER_NAME varchar(100),
    COMMENT_TEXT varchar(500),
    NUMBER_OF_LIKES integer DEFAULT 0,
    TIME_ADDED TIMESTAMP,
    CONSTRAINT COMMENTER_ID FOREIGN KEY(COMMENTER_ID)
        REFERENCES USERS (ID)
        ON UPDATE RESTRICT ON DELETE CASCADE,
    CONSTRAINT POST_ID FOREIGN KEY(POST_ID)
        REFERENCES POSTS (ID)
        ON UPDATE RESTRICT ON DELETE CASCADE
)
--
--create table JOINFRIENDS (
--    ID serial PRIMARY KEY,
--    SENT_USER integer,
--    RECEIVED_USER integer,
--    CONSTRAINT SENT_USER FOREIGN KEY(SENT_USER)
--        REFERENCES USERS (ID)
--        ON UPDATE RESTRICT ON DELETE CASCADE,
--    CONSTRAINT RECEIVED_USER FOREIGN KEY(RECEIVED_USER)
--        REFERENCES USERS (ID)
--        ON UPDATE RESTRICT ON DELETE CASCADE
--);
--
--create table JOINPOSTS (
--    ID serial PRIMARY KEY,
--    USER_ID integer,
--    POST_ID integer,
--    CONSTRAINT USER_ID FOREIGN KEY(USER_ID)
--        REFERENCES USERS (ID)
--        ON UPDATE RESTRICT ON DELETE CASCADE,
--    CONSTRAINT POST_ID FOREIGN KEY(POST_ID)
--        REFERENCES POSTS (ID)
--        ON UPDATE RESTRICT ON DELETE CASCADE
--);
--
--create table JOINCOMMENTS (
--    ID serial PRIMARY KEY,
--    USER_ID integer,
--    COMMENT_ID integer,
--    CONSTRAINT USER_ID FOREIGN KEY(USER_ID)
--        REFERENCES USERS (ID)
--        ON UPDATE RESTRICT ON DELETE CASCADE,
--    CONSTRAINT COMMENT_ID FOREIGN KEY(COMMENT_ID)
--        REFERENCES COMMENTS (ID)
--        ON UPDATE RESTRICT ON DELETE CASCADE
--)